---
---
stages:
  - dependencies
  - save
  - processing
  - analyze
  - deploy

variables:
  NODE_ENV: "production"

image: node:latest

# shared across branches, pipelines and jobs
cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - node_modules/

install-dependencies:on-schedule:
  stage: dependencies
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - npm install

data:on-schedule:
  stage: dependencies
  needs: ["install-dependencies:on-schedule"]
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - npm run database-git
    - npm run database-stripe
  artifacts:
    paths:
      - .db-github-data/
      - .db-sqlite/

save-companies:on-schedule:
  stage: save
  needs: ["data:on-schedule"]
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - npm run save-companies
  artifacts:
    paths:
      - .db-sqlite/

save-jobs:on-schedule:
  stage: save
  needs: ["save-companies:on-schedule", "data:on-schedule"]
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - npm run save-jobs
  artifacts:
    - .db-sqlite/

processing-jobs:on-schedule:
  stage: processing
  needs: ["save-jobs:on-schedule"]
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - npm run processing-companies
    - npm run processing-jobs
    - npm run processing-stripe
    # - npm run heatmap-agg
  artifacts:
    paths:
      - .db-sqlite/

analyze:on-schedule:
  stage: analyze
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - npm run analyze-companies
    - npm run analyze-jobs
  artifacts:
    paths:
      - .db-sqlite/

pages:
  stage: deploy
  script:
    - mkdir -p public
    - mv .db-sqlite/joblist.db public/
  artifacts:
    paths:
      - public
  only:
    - schedules
